@page "/login"
@using System.Web;
@using System.Net;
@using System.ComponentModel.DataAnnotations;
@using Newtonsoft.Json
@layout WebLayout;
@inject NavigationManager NavigationManager
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject IJSRuntime JSRuntime
@inject IOnChangeService _OCSvc
@inject AuthenticationStateProvider auth
@inject IToastService _toastSvc;

<div id="page-content" class="page-content">
    <div class="banner">
        <div class="jumbotron jumbotron-bg text-center rounded-0 bg-white text-dark" >
            <div class="container">
                <h1 class="pt-5">
                    Login Page
                </h1>
                <p class="lead">
                    Save time and leave the groceries to us.
                </p>

                <div class="card card-login mb-5">
                    <div class="card-body">
                        <div class="form-horizontal">
                            <div class="form-group row mt-3">
                                <div class="col-md-12">
                                    <input class="form-control" type="text" required="" placeholder="Username"  @bind="@Email">
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-12">
                                    <input class="form-control" type="password" required="" placeholder="Password" @bind="@password" @onkeypress="Enter">
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-md-12 d-flex justify-content-between align-items-center">
                                    <div class="checkbox">
                                        <input id="checkbox0" type="checkbox" name="remember">
                                        <label for="checkbox0" class="mb-0"> Remember Me? </label>
                                    </div>
                                    <a href="/login" class=""><i class="fa fa-bell"></i> Forgot password?</a>
                                </div>
                            </div>
                            <div class="form-group row text-center mt-4">
                                <div class="col-md-12">
                                    <button type="submit" @onclick="CheckLogin" class="btn btn-primary btn-block text-uppercase">Log In</button>
                                </div>
                                @if (!string.IsNullOrEmpty(error))
                                {
                                    <div class="alert alert-danger mt-3 mb-0">@((MarkupString)error)</div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@code {
 
    private string error;
    string Email = "";
    string password = "";

  
    protected override void OnInitialized()
    {
    }

    private string Encode(string param)
    {
        return HttpUtility.UrlEncode(param);
    }

    public void Enter(KeyboardEventArgs e)
    {
        if (e.Code == "Enter" || e.Code == "NumpadEnter")
        {
            if (password != "")
            {
                CheckLogin();
            }
        }
    }

    private async Task CheckLogin()
    {
        error = "";
        if (Email == "")
        {
            error = " - Bạn cần nhập email.";
        }
        if (password == "")
        {
            error += (error == "" ? "" : "<br/>") + " - Bạn cần nhập password.";
        }
        if (error == "")
        {

            var apiUrl = config.GetSection("API")["APIUrl"].ToString();
            using (var client = new HttpClient())
            {
                ViewWebLogin viewWebLogin = new ViewWebLogin() { Email = Email, Password = password };
                client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
                //client.DefaultRequestHeaders.Authorization =new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
                StringContent content = new StringContent(JsonConvert.SerializeObject(viewWebLogin), System.Text.Encoding.UTF8, "application/json");
                HttpResponseMessage response = await client.PostAsync(apiUrl + "Token", content);
                if (response.StatusCode != HttpStatusCode.OK)
                {
                    error += (error == "" ? "" : "<br/>") + " - Lỗi khi gọi API";
                    //xu ly loi
                    //return Content(response.ToString());
                }
                else
                {
                    string apiResponse = await response.Content.ReadAsStringAsync();

                    var viewToken = Newtonsoft.Json.JsonConvert.DeserializeObject<ViewToken>(apiResponse);

                    var accessToken = viewToken.Token;
                    sessionStorage.SetItem("KhachhangId", viewToken.KhachhangId);
                    sessionStorage.SetItem("Email", viewToken.Email);
                    sessionStorage.SetItem("UserName", Email);
                    //Console.WriteLine("email: " + viewToken.Email);
                    sessionStorage.SetItem("AccessToken", accessToken);
                    await auth.GetAuthenticationStateAsync();
                    //await JSRuntime.InvokeAsync<object>("refreshMenu", new {email= email});
                    //await JSRuntime.InvokeAsync<object>("CalledJSFunctionWithParameter", "Jignesh Trivedi");
                    _toastSvc.ShowSuccess($"Login Success {viewToken.Email}");
                    _OCSvc.Invoke();
                    NavigationManager.NavigateTo("/");
                }
            }
        }
    }
}