@page "/cart"
@using System.Net;

@using Newtonsoft.Json
@inject IJSRuntime JSRuntime
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject NavigationManager NavigationManager
@layout WebLayout;
@inject IOnChangeService _OCSvc;
@inject IToastService _toastSvc;

<style>
    body {
        margin-top: 20px;
        background: #eee;
    }

    .ui-w-40 {
        width: 40px !important;
        height: auto;
    }

    .card {
        box-shadow: 0 1px 15px 1px rgba(52,40,104,.08);
    }

    .ui-product-color {
        display: inline-block;
        overflow: hidden;
        margin: .144em;
        width: .875rem;
        height: .875rem;
        border-radius: 10rem;
        -webkit-box-shadow: 0 0 0 1px rgba(0,0,0,0.15) inset;
        box-shadow: 0 0 0 1px rgba(0,0,0,0.15) inset;
        vertical-align: middle;
    }
</style>

@if (giohang.cartItems != null)
{
    <div class="container px-3 my-5 clearfix">
        <!-- Shopping cart table -->
        <div class="card">
            <div class="card-header">
                <h2>Shopping Cart</h2>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered m-0">
                        <thead>
                            <tr>
                                <!-- Set columns width -->
                                <th class="text-center py-3 px-4" style="width: 200px;">Product Name</th>
                                <th class="text-right py-3 px-4" style="width: 100px;">Price</th>
                                <th class="text-center py-3 px-4" style="width: 120px;">Quantity</th>
                                <th class="text-right py-3 px-4" style="width: 100px;">Total</th>
                                <th class="text-center align-middle py-3 px-0" style="width: 40px;"><a href="#" class="shop-tooltip float-none text-light" title="" data-original-title="Clear cart"><i class="ino ion-md-trash"></i></a>Remove</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in giohang.cartItems)
                            {
                                <tr>
                                    @{
                                        if (item.product.Photos.Any())
                                        {
                                            temp = imgUrl + item.product.Photos.FirstOrDefault().FileName;
                                        }
                                        else
                                        {
                                            temp = imgUrl + "/nophoto.png";
                                        }
                                    }

                                    <td class="p-4">
                                        <div class="media align-items-center">
                                            <img src="@temp" class="d-block ui-w-40 ui-bordered mr-4" alt="">
                                            <div class="media-body">
                                                <a class="d-block text-dark">@item.product.Name</a>
                                            </div>
                                        </div>
                                    </td>
                                    <td class="text-right font-weight-semibold align-middle p-4">@item.product.Gia.ToString("n0")</td>
                                    <td class="align-middle p-4">
                                        <label>Quantity</label>
                                        <input type="number" max="100" min="1" id="txtQuantity_@item.product.Id"
                                               @oninput="(e) => item.quantity = int.Parse(e.Value.ToString())"
                                               @onchange="() => UpdateCart(item)" value="@item.quantity" />
                                    </td>
                                    <td class="text-right font-weight-semibold align-middle p-4">@item.Sotien</td>
                                    <td class="text-center align-middle px-0">
                                        <a class="btn btn-primary" href="javascript:return false;" @onclick="() => DeleteCart(item)"
                                           onmouseup="delCart(@item.product.Id)"><i class="ion-android-close">Delete</i></a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- / Shopping cart table -->

                <div class="d-flex flex-wrap justify-content-between align-items-center pb-4">
                    <div class="d-flex">
                        <div class="text-right mt-4">
                            <label class="text-muted font-weight-normal m-0"></label>
                            <div class="text-large">
                                <strong>Total price: @giohang.TongTien VND</strong>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="float-right">
                    <button type="button" class="btn btn-primary btn-lg btn-default  md-btn-flat mt-2 mr-3">
                        <a class="text-white" href="/">Back to shopping</a>
                    </button>
                    @if (@emailAddress != null && @emailAddress != "")
                    {
                        <div class="checkout_btn">

                            <button type="button" @onclick="OrderCart" class="btn btn-lg btn-primary mt-2">Checkout</button>

                        </div>

                    }
                    else
                    {
                        <div class="checkout_btn">
                            <a href="/login" class="btn btn-primary btn-lg btn-default text-white md-btn-flat mt-2 mr-3">
                                You need to login to order
                            </a>
                        </div>

                    }
                </div>

            </div>
        </div>
    </div>
}
else
{
    <h1 class="text-center mt-3">Giỏ hàng trống</h1>
}



@code {
    private string emailAddress;
    public PostCartModel giohang;
    private double total = 0;
    protected string imgUrl = "";
    protected string temp = "";

    protected override async Task OnInitializedAsync()
    {
        emailAddress = sessionStorage.GetItem<string>("Email");//get key cart
        var cart = sessionStorage.GetItem<string>("cart");//get key cart

        if (cart == null)
        {
            giohang = new PostCartModel();
        }
        else
        {
            giohang = JsonConvert.DeserializeObject<PostCartModel>(cart);
        }

        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
    }

    private void UpdateCart(CartItem item)
    {
        item.Sotien = (double)(item.quantity * item.product.Gia);
        giohang.TongTien = Tinhtien(giohang.cartItems);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
    }

    private void DeleteCart(CartItem item)
    {
        giohang.cartItems.Remove(item);
        giohang.TongTien = Tinhtien(giohang.cartItems);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
        _toastSvc.ShowSuccess($"DeleteSuccess");
        _OCSvc.Invoke();
    }

    private async Task OrderCart()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<string>("KhachhangId");
        if (giohang.cartItems.Count <= 0 || giohang.cartItems == null)
        {
            _toastSvc.ShowError($"Cart Empty");
            return;
        }
        giohang.khachHangId = khachhangId;

        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(giohang), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "Cart", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {
                //error += (error == "" ? "" : "<br/>") + " - Lỗi khi gọi API.";
                //xu ly loi
                //return Content(response.ToString());
            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else // luu thanh cong
                {
                    sessionStorage.RemoveItem("cart");
                    await JSRuntime.InvokeAsync<object>("clearCart", "");
                    NavigationManager.NavigateTo("/history");
                }
            }
        }
        _OCSvc.Invoke();
    }

    private double Tinhtien(List<CartItem> listCart)
    {
        double tongtien = 0;
        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                tongtien += listCart[i].Sotien;
            }
        }
        return tongtien;
    }
}

