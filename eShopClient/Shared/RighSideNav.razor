@using System.Threading
@using Newtonsoft.Json
@using System.Net
@inject Blazored.SessionStorage.ISyncSessionStorageService sessionStorage
@inject NavigationManager NavigationManager
@implements IDisposable
@inject IOnChangeService _OCSvc
@inject Microsoft.Extensions.Configuration.IConfiguration config;
@inject IToastService _toastSvc;
@using System.Web;

<div>
    <nav class="navbar fixed-top navbar-expand-md navbar-dark bg-transparent" id="page-navigation">
        <div class="container">
            <!-- Navbar Brand -->
            <a href="/" class="navbar-brand">
                <img src="assets/img/logo/logofood.png" alt="">
            </a>

            <!-- Toggle Button -->
            <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarcollapse" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="collapse navbar-collapse" id="navbarcollapse">
               
                <!-- Navbar Menu -->
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <a href="/" class="nav-link">Shop</a>
                    </li>
                    @if (CheckLogin() != null && CheckLogin() != "")
                    {


                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle" href="javascript:void(0)" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                <div class="avatar-header"><img src="assets/img/logo/avatar.jpg"></div>
                            </a>
                            <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                                <a class="dropdown-item" href="/History">Transactions History</a>
                                <a class="dropdown-item" href="">Settings</a>
                                <a href="/register" class="dropdown-item">Register</a>
                                <a class="dropdown-item" href="/logout">Logout</a>

                            </div>
                        </li>
                    }
                    else
                    {
                        <li class="nav-item">
                            <a href="/register" class="nav-link">Register</a>
                        </li>
                        <li class="nav-item">
                            <a href="/login" class="nav-link">Login</a>
                        </li>
                    }


                    <li class="nav-item dropdown">
                        <a href="javascript:void(0)" class="nav-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                            <i class="fa fa-shopping-basket"></i> <span class="badge badge-primary">@GetCountCart()</span>
                        </a>
                        <div class="dropdown-menu shopping-cart">
                            <ul>
                                <li>
                                    <div class="drop-title">Your Cart</div>
                                </li>
                                <li>
                                    <div class="shopping-cart-list">
                                        @if (IsGioHangNotNull())
                                        {
                                            @foreach (var item in giohang.cartItems)
                                            {
                                                <div class="media">
                                                    @{
                                                        if (item.product.Photos.Any())
                                                        {
                                                            temp = imgUrl + item.product.Photos.FirstOrDefault().FileName;
                                                        }
                                                        else
                                                        {
                                                            temp = imgUrl + "/nophoto.png";
                                                        }
                                                    }
                                                    <img class="d-flex mr-3" src="@temp" width="60">
                                                    <div class="media-body">
                                                        <p>Name: @item.product.Name</p>
                                                        <p class="">

                                                            Price: @item.product.Gia.ToString("n0") VND
                                                        </p>
                                                        <p class="text-muted">Quantity: @item.quantity</p>
                                                    </div>
                                                </div>
                                            }



                                        }
                                        else
                                        {
                                            <div style=" text-align: center; font-size: 20px;">Cart is empty</div>
                                        }
                                    </div>
                                </li>
                                <li>
                                    <div class="drop-title d-flex justify-content-between">
                                        <span>Total:</span>
                                        <span class="text-primary"><strong>@giohang.TongTien VND</strong></span>
                                    </div>
                                </li>
                                <li class="d-flex justify-content-between  pr-3 ">
                                    <a href="/cart" class="btn btn-primary" style="margin-right: 13px; margin-left: 3px; ">View Cart</a>
                                    @if (@emailAddress != null && @emailAddress != "")
                                    {
                                        <a href="" @onclick="()=>OrderCart()" class="btn btn-primary">

                                            Checkout

                                        </a>
                                    }
                                    else
                                    {

                                        <a href="/login" class="btn btn-primary">
                                            You need to login to order
                                        </a>


                                    }
                                </li>
                            </ul>
                        </div>
                    </li>
                </ul>
            </div>
        </div>
    </nav>
</div>
<div class="banner">
    <div class="jumbotron jumbotron-video text-center bg-dark mb-0 rounded-0">

        <div class="container">
            <h1 class="pt-5">
                Save time and leave the<br>
                groceries to us.
            </h1>
            <p class="lead">
                Always Fresh Everyday.
            </p>

            <div class="row">
                <div class="col-md-4">
                    <div class="card border-0 text-center">
                        <div class="card-icon">
                            <div class="card-icon-i">
                                <i class="fa fa-shopping-basket"></i>
                            </div>
                        </div>
                        <div class="card-body">
                            <h4 class="card-title">
                                Buy
                            </h4>
                            <p class="card-text">
                                Simply click-to-buy on the product you want and submit your order when you're done.
                            </p>

                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card border-0 text-center">
                        <div class="card-icon">
                            <div class="card-icon-i">
                                <i class="fas fa-leaf"></i>
                            </div>
                        </div>
                        <div class="card-body">
                            <h4 class="card-title">
                                Harvest
                            </h4>
                            <p class="card-text">
                                Our team ensures the produce quality is up to our standard and delivers to your door within 24 hours of harvest day.
                            </p>

                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card border-0 text-center">
                        <div class="card-icon">
                            <div class="card-icon-i">
                                <i class="fa fa-truck"></i>
                            </div>
                        </div>
                        <div class="card-body">
                            <h4 class="card-title">
                                Delivery
                            </h4>
                            <p class="card-text">
                                Farmers receive your orders two days in advance so they can prepare for harvest exactly as your orders – no wasted produce.
                            </p>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code{
    string emailAddress;
    string Name;
    public PostCartModel giohang;
    protected string imgUrl = "";
    string cart;
    int cartItemCount = 0;
    protected string temp = "";
    protected override void OnInitialized()
    {
        CheckLogin();
        //cart = sessionStorage.GetItem<string>("cart");
        _OCSvc.OnChange += StateHasChanged;
        emailAddress = sessionStorage.GetItem<string>("Email");//get key cart
        getGioHang();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
    }
    public void Dispose()
    {
        _OCSvc.OnChange -= StateHasChanged;
    }
    public void getGioHang()
    {
        var cart = sessionStorage.GetItem<string>("cart");//get key cart

        if (cart == null)
        {
            giohang = new PostCartModel();
        }
        else
        {
            giohang = JsonConvert.DeserializeObject<PostCartModel>(cart);
        }
    }
    private async Task OrderCart()
    {
        var apiUrl = config.GetSection("API")["APIUrl"].ToString();
        imgUrl = config.GetSection("API")["ImgUrl"].ToString();
        var accessToken = sessionStorage.GetItem<string>("AccessToken");
        var khachhangId = sessionStorage.GetItem<string>("KhachhangId");

        if (giohang.cartItems.Count <= 0 || giohang.cartItems == null)
        {
            _toastSvc.ShowError($"Cart Empty");
            return ;
        }
        giohang.khachHangId = khachhangId;

        using (var client = new HttpClient())
        {
            client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", accessToken);
            StringContent content = new StringContent(JsonConvert.SerializeObject(giohang), System.Text.Encoding.UTF8, "application/json");
            client.DefaultRequestHeaders.Add("Access-Control-Allow-Origin", "*");
            HttpResponseMessage response = await client.PostAsync(apiUrl + "Cart", content);

            if (response.StatusCode != HttpStatusCode.OK)
            {
                //error += (error == "" ? "" : "<br/>") + " - Lỗi khi gọi API.";
                //xu ly loi
                //return Content(response.ToString());
            }
            else
            {
                string apiResponse = await response.Content.ReadAsStringAsync();
                if (apiResponse == "-1")
                {

                }
                else // luu thanh cong
                {
                    sessionStorage.RemoveItem("cart");
                    //await JSRuntime.InvokeAsync<object>("clearCart", "");
                    NavigationManager.NavigateTo("/history");
                }
            }
        }
        _OCSvc.Invoke();
    }
    private bool IsGioHangNotNull()
    {
        getGioHang();
        if (giohang.cartItems != null)
            return true;
        return false;
    }
    private void DeleteCart(CartItem item)
    {
        giohang.cartItems.Remove(item);
        giohang.TongTien = Tinhtien(giohang.cartItems);
        sessionStorage.SetItem("cart", JsonConvert.SerializeObject(giohang));
        _OCSvc.Invoke();
    }
    public string CheckLogin()
    {
        return emailAddress = sessionStorage.GetItem<string>("Email");
    }

    private double Tinhtien(List<CartItem> listCart)
    {
        double tongtien = 0;
        if (listCart != null)
        {
            for (int i = 0; i < listCart.Count; i++)
            {
                tongtien += listCart[i].Sotien;
            }
        }
        return tongtien;
    }
    public int GetCountCart()
    {
        cart = sessionStorage.GetItem<string>("cart");
        if (cart != null)
        {
            PostCartModel giohang = JsonConvert.DeserializeObject<PostCartModel>(cart);
            var temp = cartItemCount = giohang.cartItems.Count;
            return temp;
        }
        return 0;
    }
    protected void o()
    {
        emailAddress = sessionStorage.GetItem<string>("Email");
        cart = sessionStorage.GetItem<string>("cart");
    }

    protected void Logout()
    {
        sessionStorage.RemoveItem("AccessToken");
        sessionStorage.RemoveItem("Email");
        NavigationManager.NavigateTo("/");
    }

}
